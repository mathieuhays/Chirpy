
### valid request
POST http://localhost:8080/api/validate_chirp
Content-Type: application/json

{"body": "This is an opinion I need to share with the world"}

> {%
 client.test("returns 200 status", function () {
     client.assert(response.status === 200, "response is not 200")
 })

 client.test("contains cleaned_body property", function () {
     client.assert(response.body.hasOwnProperty('cleaned_body'), "cannot find 'cleaned_body' property")
 })
 %}

### malformed request, wrong prop name
POST http://localhost:8080/api/validate_chirp
Content-Type: application/json

{"test": "This is an opinion I need to share with the world"}

> {%
    client.test("returns 400 status", function () {
        client.assert(response.status === 400, "response is not 400")
    })

    client.test("contains error property", function () {
        client.assert(response.body.hasOwnProperty('error'), "cannot find 'error' property")
    })
%}

### malformed request, wrong type
POST http://localhost:8080/api/validate_chirp
Content-Type: application/json

{"body": {"test":  123}}

> {%
    client.test("returns 400 status", function () {
        client.assert(response.status === 400, "response is not 400")
    })

    client.test("contains error property", function () {
        client.assert(response.body.hasOwnProperty('error'), "cannot find 'error' property")
    })
%}

### invalid request
POST http://localhost:8080/api/validate_chirp
Content-Type: application/json

{"body": "This is an opinion I need to share with the world. That one might be a bit too long though. Better be exhaustive. Lorem ipsum dolor Integer posuere erat a ante venenatis dapibus posuere velit aliquet."}

> {%
    client.test("returns 400 status", function () {
        client.assert(response.status === 400, "response is not 400")
    })

    client.test("contains error property", function () {
        client.assert(response.body.hasOwnProperty('error'), "cannot find 'error' property")
    })
%}